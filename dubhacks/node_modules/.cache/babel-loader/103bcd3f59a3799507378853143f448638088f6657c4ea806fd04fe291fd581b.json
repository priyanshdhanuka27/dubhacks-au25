{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\OneDrive - UW\\\\Hackathons\\\\auDubhacks25\\\\dubhacks\\\\src\\\\components\\\\common\\\\ErrorBoundary.tsx\";\nimport React, { Component } from 'react';\nimport './ErrorComponents.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.logErrorToService = (error, errorInfo) => {\n      // In a real application, you would send this to your logging service\n      const errorData = {\n        message: error.message,\n        stack: error.stack,\n        componentStack: errorInfo.componentStack,\n        timestamp: new Date().toISOString(),\n        userAgent: navigator.userAgent,\n        url: window.location.href\n      };\n      console.error('Error logged to service:', errorData);\n    };\n    this.handleRetry = () => {\n      this.setState({\n        hasError: false,\n        error: undefined,\n        errorInfo: undefined\n      });\n    };\n    this.state = {\n      hasError: false\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true,\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error,\n      errorInfo\n    });\n\n    // Log error to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.error('ErrorBoundary caught an error:', error, errorInfo);\n    }\n\n    // Call custom error handler if provided\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n\n    // Track error in production (you could send to logging service)\n    if (process.env.NODE_ENV === 'production') {\n      this.logErrorToService(error, errorInfo);\n    }\n  }\n  render() {\n    if (this.state.hasError) {\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-boundary\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-boundary-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Oops! Something went wrong\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"We're sorry, but something unexpected happened. Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), process.env.NODE_ENV === 'development' && this.state.error && /*#__PURE__*/_jsxDEV(\"details\", {\n            className: \"error-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n              children: \"Error Details (Development Only)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: this.state.error.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: this.state.error.stack\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), this.state.errorInfo && /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: this.state.errorInfo.componentStack\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleRetry,\n              className: \"retry-button\",\n              children: \"Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => window.location.reload(),\n              className: \"reload-button\",\n              children: \"Reload Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n    }\n    return this.props.children;\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","ErrorBoundary","constructor","props","logErrorToService","error","errorInfo","errorData","message","stack","componentStack","timestamp","Date","toISOString","userAgent","navigator","url","window","location","href","console","handleRetry","setState","hasError","undefined","state","getDerivedStateFromError","componentDidCatch","process","env","NODE_ENV","onError","render","fallback","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","reload"],"sources":["C:/Users/priya/OneDrive - UW/Hackathons/auDubhacks25/dubhacks/src/components/common/ErrorBoundary.tsx"],"sourcesContent":["import React, { Component, ErrorInfo, ReactNode } from 'react';\r\nimport './ErrorComponents.css';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  fallback?: ReactNode;\r\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error?: Error;\r\n  errorInfo?: ErrorInfo;\r\n}\r\n\r\nexport class ErrorBoundary extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): State {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    this.setState({ error, errorInfo });\r\n    \r\n    // Log error to console in development\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.error('ErrorBoundary caught an error:', error, errorInfo);\r\n    }\r\n\r\n    // Call custom error handler if provided\r\n    if (this.props.onError) {\r\n      this.props.onError(error, errorInfo);\r\n    }\r\n\r\n    // Track error in production (you could send to logging service)\r\n    if (process.env.NODE_ENV === 'production') {\r\n      this.logErrorToService(error, errorInfo);\r\n    }\r\n  }\r\n\r\n  private logErrorToService = (error: Error, errorInfo: ErrorInfo) => {\r\n    // In a real application, you would send this to your logging service\r\n    const errorData = {\r\n      message: error.message,\r\n      stack: error.stack,\r\n      componentStack: errorInfo.componentStack,\r\n      timestamp: new Date().toISOString(),\r\n      userAgent: navigator.userAgent,\r\n      url: window.location.href,\r\n    };\r\n\r\n    console.error('Error logged to service:', errorData);\r\n  };\r\n\r\n  private handleRetry = () => {\r\n    this.setState({ hasError: false, error: undefined, errorInfo: undefined });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      if (this.props.fallback) {\r\n        return this.props.fallback;\r\n      }\r\n\r\n      return (\r\n        <div className=\"error-boundary\">\r\n          <div className=\"error-boundary-content\">\r\n            <h2>Oops! Something went wrong</h2>\r\n            <p>We're sorry, but something unexpected happened. Please try again.</p>\r\n            \r\n            {process.env.NODE_ENV === 'development' && this.state.error && (\r\n              <details className=\"error-details\">\r\n                <summary>Error Details (Development Only)</summary>\r\n                <pre>{this.state.error.message}</pre>\r\n                <pre>{this.state.error.stack}</pre>\r\n                {this.state.errorInfo && (\r\n                  <pre>{this.state.errorInfo.componentStack}</pre>\r\n                )}\r\n              </details>\r\n            )}\r\n            \r\n            <div className=\"error-actions\">\r\n              <button onClick={this.handleRetry} className=\"retry-button\">\r\n                Try Again\r\n              </button>\r\n              <button onClick={() => window.location.reload()} className=\"reload-button\">\r\n                Reload Page\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}