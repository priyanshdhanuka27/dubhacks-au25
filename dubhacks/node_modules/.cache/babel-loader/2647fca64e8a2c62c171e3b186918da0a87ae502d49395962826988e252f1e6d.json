{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\OneDrive - UW\\\\Hackathons\\\\auDubhacks25\\\\dubhacks\\\\src\\\\components\\\\search\\\\FilterPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { searchService } from '../../services/searchService';\nimport './SearchComponents.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FilterPanel = ({\n  filters,\n  onFiltersChange\n}) => {\n  _s();\n  var _localFilters$dateRan, _localFilters$dateRan2, _localFilters$dateRan3, _localFilters$locatio, _localFilters$locatio2, _localFilters$locatio3, _localFilters$priceRa, _localFilters$priceRa2, _localFilters$keyword;\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [localFilters, setLocalFilters] = useState(filters);\n  const categories = searchService.getPopularCategories();\n  const handleDateRangeChange = (field, value) => {\n    const newDate = value ? new Date(value) : undefined;\n    const currentDateRange = localFilters.dateRange;\n\n    // Create new date range object with the updated field\n    const updatedDateRange = {\n      startDate: field === 'startDate' ? newDate : currentDateRange === null || currentDateRange === void 0 ? void 0 : currentDateRange.startDate,\n      endDate: field === 'endDate' ? newDate : currentDateRange === null || currentDateRange === void 0 ? void 0 : currentDateRange.endDate\n    };\n\n    // Only include dateRange if at least one date is set\n    if (updatedDateRange.startDate || updatedDateRange.endDate) {\n      // Only set dateRange if we have at least one valid date\n      const validDateRange = {};\n      if (updatedDateRange.startDate) validDateRange.startDate = updatedDateRange.startDate;\n      if (updatedDateRange.endDate) validDateRange.endDate = updatedDateRange.endDate;\n      setLocalFilters({\n        ...localFilters,\n        dateRange: validDateRange\n      });\n    } else {\n      // Remove dateRange if both dates are empty\n      const {\n        dateRange,\n        ...filtersWithoutDateRange\n      } = localFilters;\n      setLocalFilters(filtersWithoutDateRange);\n    }\n  };\n  const handleLocationChange = (field, value) => {\n    const newFilters = {\n      ...localFilters,\n      location: {\n        ...localFilters.location,\n        [field]: value || undefined\n      }\n    };\n\n    // Remove location if all fields are empty\n    const locationFields = Object.values(newFilters.location || {});\n    if (locationFields.every(val => !val)) {\n      const {\n        location,\n        ...filtersWithoutLocation\n      } = newFilters;\n      setLocalFilters(filtersWithoutLocation);\n      return;\n    }\n    setLocalFilters(newFilters);\n  };\n  const handleCategoryToggle = category => {\n    const currentCategories = localFilters.categories || [];\n    const newCategories = currentCategories.includes(category) ? currentCategories.filter(c => c !== category) : [...currentCategories, category];\n    const newFilters = {\n      ...localFilters,\n      categories: newCategories.length > 0 ? newCategories : undefined\n    };\n    setLocalFilters(newFilters);\n  };\n  const handlePriceRangeChange = (field, value) => {\n    const numValue = value ? parseFloat(value) : undefined;\n    const currentPriceRange = localFilters.priceRange;\n\n    // Create updated price range\n    const updatedPriceRange = {\n      min: field === 'min' ? numValue : currentPriceRange === null || currentPriceRange === void 0 ? void 0 : currentPriceRange.min,\n      max: field === 'max' ? numValue : currentPriceRange === null || currentPriceRange === void 0 ? void 0 : currentPriceRange.max\n    };\n\n    // Only include priceRange if at least one value is set\n    if (updatedPriceRange.min !== undefined || updatedPriceRange.max !== undefined) {\n      // Only set priceRange if we have at least one valid value\n      const validPriceRange = {};\n      if (updatedPriceRange.min !== undefined) validPriceRange.min = updatedPriceRange.min;\n      if (updatedPriceRange.max !== undefined) validPriceRange.max = updatedPriceRange.max;\n      setLocalFilters({\n        ...localFilters,\n        priceRange: validPriceRange\n      });\n    } else {\n      // Remove priceRange if both values are empty\n      const {\n        priceRange,\n        ...filtersWithoutPriceRange\n      } = localFilters;\n      setLocalFilters(filtersWithoutPriceRange);\n    }\n  };\n  const handleKeywordsChange = value => {\n    const keywords = value.split(',').map(k => k.trim()).filter(k => k.length > 0);\n    const newFilters = {\n      ...localFilters,\n      keywords: keywords.length > 0 ? keywords : undefined\n    };\n    setLocalFilters(newFilters);\n  };\n  const applyFilters = () => {\n    onFiltersChange(localFilters);\n  };\n  const clearFilters = () => {\n    const emptyFilters = {};\n    setLocalFilters(emptyFilters);\n    onFiltersChange(emptyFilters);\n  };\n  const hasActiveFilters = () => {\n    return Object.keys(localFilters).length > 0;\n  };\n  const formatDateForInput = date => {\n    if (!date) return '';\n    return date.toISOString().split('T')[0];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-toggle\",\n        onClick: () => setIsExpanded(!isExpanded),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `toggle-icon ${isExpanded ? 'expanded' : ''}`,\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), hasActiveFilters() && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"active-indicator\",\n          children: \"\\u25CF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), hasActiveFilters() && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-filters-btn\",\n        onClick: clearFilters,\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Date Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"start-date\",\n              children: \"From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"start-date\",\n              type: \"date\",\n              value: formatDateForInput((_localFilters$dateRan = localFilters.dateRange) === null || _localFilters$dateRan === void 0 ? void 0 : _localFilters$dateRan.startDate),\n              onChange: e => handleDateRangeChange('startDate', e.target.value),\n              min: new Date().toISOString().split('T')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"end-date\",\n              children: \"To:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"end-date\",\n              type: \"date\",\n              value: formatDateForInput((_localFilters$dateRan2 = localFilters.dateRange) === null || _localFilters$dateRan2 === void 0 ? void 0 : _localFilters$dateRan2.endDate),\n              onChange: e => handleDateRangeChange('endDate', e.target.value),\n              min: formatDateForInput((_localFilters$dateRan3 = localFilters.dateRange) === null || _localFilters$dateRan3 === void 0 ? void 0 : _localFilters$dateRan3.startDate) || new Date().toISOString().split('T')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"city\",\n              children: \"City:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"city\",\n              type: \"text\",\n              placeholder: \"e.g., Seattle\",\n              value: ((_localFilters$locatio = localFilters.location) === null || _localFilters$locatio === void 0 ? void 0 : _localFilters$locatio.city) || '',\n              onChange: e => handleLocationChange('city', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"state\",\n              children: \"State:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"state\",\n              type: \"text\",\n              placeholder: \"e.g., WA\",\n              value: ((_localFilters$locatio2 = localFilters.location) === null || _localFilters$locatio2 === void 0 ? void 0 : _localFilters$locatio2.state) || '',\n              onChange: e => handleLocationChange('state', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"radius\",\n              children: \"Radius (miles):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"radius\",\n              type: \"number\",\n              placeholder: \"25\",\n              min: \"1\",\n              max: \"500\",\n              value: ((_localFilters$locatio3 = localFilters.location) === null || _localFilters$locatio3 === void 0 ? void 0 : _localFilters$locatio3.radius) || '',\n              onChange: e => handleLocationChange('radius', parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"categories-grid\",\n          children: categories.map(category => {\n            var _localFilters$categor;\n            return /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"category-checkbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: ((_localFilters$categor = localFilters.categories) === null || _localFilters$categor === void 0 ? void 0 : _localFilters$categor.includes(category)) || false,\n                onChange: () => handleCategoryToggle(category)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 37\n              }, this)]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Price Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"min-price\",\n              children: \"Min ($):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"min-price\",\n              type: \"number\",\n              placeholder: \"0\",\n              min: \"0\",\n              value: ((_localFilters$priceRa = localFilters.priceRange) === null || _localFilters$priceRa === void 0 ? void 0 : _localFilters$priceRa.min) || '',\n              onChange: e => handlePriceRangeChange('min', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"max-price\",\n              children: \"Max ($):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"max-price\",\n              type: \"number\",\n              placeholder: \"1000\",\n              min: \"0\",\n              value: ((_localFilters$priceRa2 = localFilters.priceRange) === null || _localFilters$priceRa2 === void 0 ? void 0 : _localFilters$priceRa2.max) || '',\n              onChange: e => handlePriceRangeChange('max', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Keywords\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"keywords\",\n            children: \"Keywords (comma-separated):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"keywords\",\n            type: \"text\",\n            placeholder: \"e.g., networking, startup, tech\",\n            value: ((_localFilters$keyword = localFilters.keywords) === null || _localFilters$keyword === void 0 ? void 0 : _localFilters$keyword.join(', ')) || '',\n            onChange: e => handleKeywordsChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"apply-filters-btn\",\n          onClick: applyFilters,\n          children: \"Apply Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n_s(FilterPanel, \"SqCY0xeuSjSSwzE6tDuASaiKL5w=\");\n_c = FilterPanel;\nvar _c;\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"names":["React","useState","searchService","jsxDEV","_jsxDEV","FilterPanel","filters","onFiltersChange","_s","_localFilters$dateRan","_localFilters$dateRan2","_localFilters$dateRan3","_localFilters$locatio","_localFilters$locatio2","_localFilters$locatio3","_localFilters$priceRa","_localFilters$priceRa2","_localFilters$keyword","isExpanded","setIsExpanded","localFilters","setLocalFilters","categories","getPopularCategories","handleDateRangeChange","field","value","newDate","Date","undefined","currentDateRange","dateRange","updatedDateRange","startDate","endDate","validDateRange","filtersWithoutDateRange","handleLocationChange","newFilters","location","locationFields","Object","values","every","val","filtersWithoutLocation","handleCategoryToggle","category","currentCategories","newCategories","includes","filter","c","length","handlePriceRangeChange","numValue","parseFloat","currentPriceRange","priceRange","updatedPriceRange","min","max","validPriceRange","filtersWithoutPriceRange","handleKeywordsChange","keywords","split","map","k","trim","applyFilters","clearFilters","emptyFilters","hasActiveFilters","keys","formatDateForInput","date","toISOString","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","onChange","e","target","placeholder","city","state","radius","parseInt","_localFilters$categor","checked","join","_c","$RefreshReg$"],"sources":["C:/Users/priya/OneDrive - UW/Hackathons/auDubhacks25/dubhacks/src/components/search/FilterPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { SearchFilters } from '../../types';\r\nimport { searchService } from '../../services/searchService';\r\nimport './SearchComponents.css';\r\n\r\ninterface FilterPanelProps {\r\n    filters: SearchFilters;\r\n    onFiltersChange: (filters: SearchFilters) => void;\r\n}\r\n\r\nexport const FilterPanel: React.FC<FilterPanelProps> = ({\r\n    filters,\r\n    onFiltersChange,\r\n}) => {\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    const [localFilters, setLocalFilters] = useState<SearchFilters>(filters);\r\n\r\n    const categories = searchService.getPopularCategories();\r\n\r\n    const handleDateRangeChange = (field: 'startDate' | 'endDate', value: string) => {\r\n        const newDate = value ? new Date(value) : undefined;\r\n        const currentDateRange = localFilters.dateRange;\r\n\r\n        // Create new date range object with the updated field\r\n        const updatedDateRange = {\r\n            startDate: field === 'startDate' ? newDate : currentDateRange?.startDate,\r\n            endDate: field === 'endDate' ? newDate : currentDateRange?.endDate,\r\n        };\r\n\r\n        // Only include dateRange if at least one date is set\r\n        if (updatedDateRange.startDate || updatedDateRange.endDate) {\r\n            // Only set dateRange if we have at least one valid date\r\n            const validDateRange: any = {};\r\n            if (updatedDateRange.startDate) validDateRange.startDate = updatedDateRange.startDate;\r\n            if (updatedDateRange.endDate) validDateRange.endDate = updatedDateRange.endDate;\r\n\r\n            setLocalFilters({\r\n                ...localFilters,\r\n                dateRange: validDateRange,\r\n            });\r\n        } else {\r\n            // Remove dateRange if both dates are empty\r\n            const { dateRange, ...filtersWithoutDateRange } = localFilters;\r\n            setLocalFilters(filtersWithoutDateRange);\r\n        }\r\n    };\r\n\r\n    const handleLocationChange = (field: keyof NonNullable<SearchFilters['location']>, value: string | number) => {\r\n        const newFilters = {\r\n            ...localFilters,\r\n            location: {\r\n                ...localFilters.location,\r\n                [field]: value || undefined,\r\n            },\r\n        };\r\n\r\n        // Remove location if all fields are empty\r\n        const locationFields = Object.values(newFilters.location || {});\r\n        if (locationFields.every(val => !val)) {\r\n            const { location, ...filtersWithoutLocation } = newFilters;\r\n            setLocalFilters(filtersWithoutLocation);\r\n            return;\r\n        }\r\n\r\n        setLocalFilters(newFilters);\r\n    };\r\n\r\n    const handleCategoryToggle = (category: string) => {\r\n        const currentCategories = localFilters.categories || [];\r\n        const newCategories = currentCategories.includes(category)\r\n            ? currentCategories.filter(c => c !== category)\r\n            : [...currentCategories, category];\r\n\r\n        const newFilters = {\r\n            ...localFilters,\r\n            categories: newCategories.length > 0 ? newCategories : undefined,\r\n        };\r\n\r\n        setLocalFilters(newFilters);\r\n    };\r\n\r\n    const handlePriceRangeChange = (field: 'min' | 'max', value: string) => {\r\n        const numValue = value ? parseFloat(value) : undefined;\r\n        const currentPriceRange = localFilters.priceRange;\r\n\r\n        // Create updated price range\r\n        const updatedPriceRange = {\r\n            min: field === 'min' ? numValue : currentPriceRange?.min,\r\n            max: field === 'max' ? numValue : currentPriceRange?.max,\r\n        };\r\n\r\n        // Only include priceRange if at least one value is set\r\n        if (updatedPriceRange.min !== undefined || updatedPriceRange.max !== undefined) {\r\n            // Only set priceRange if we have at least one valid value\r\n            const validPriceRange: any = {};\r\n            if (updatedPriceRange.min !== undefined) validPriceRange.min = updatedPriceRange.min;\r\n            if (updatedPriceRange.max !== undefined) validPriceRange.max = updatedPriceRange.max;\r\n\r\n            setLocalFilters({\r\n                ...localFilters,\r\n                priceRange: validPriceRange,\r\n            });\r\n        } else {\r\n            // Remove priceRange if both values are empty\r\n            const { priceRange, ...filtersWithoutPriceRange } = localFilters;\r\n            setLocalFilters(filtersWithoutPriceRange);\r\n        }\r\n    };\r\n\r\n    const handleKeywordsChange = (value: string) => {\r\n        const keywords = value.split(',').map(k => k.trim()).filter(k => k.length > 0);\r\n        const newFilters = {\r\n            ...localFilters,\r\n            keywords: keywords.length > 0 ? keywords : undefined,\r\n        };\r\n\r\n        setLocalFilters(newFilters);\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        onFiltersChange(localFilters);\r\n    };\r\n\r\n    const clearFilters = () => {\r\n        const emptyFilters: SearchFilters = {};\r\n        setLocalFilters(emptyFilters);\r\n        onFiltersChange(emptyFilters);\r\n    };\r\n\r\n    const hasActiveFilters = () => {\r\n        return Object.keys(localFilters).length > 0;\r\n    };\r\n\r\n    const formatDateForInput = (date?: Date) => {\r\n        if (!date) return '';\r\n        return date.toISOString().split('T')[0];\r\n    };\r\n\r\n    return (\r\n        <div className=\"filter-panel\">\r\n            <div className=\"filter-header\">\r\n                <button\r\n                    className=\"filter-toggle\"\r\n                    onClick={() => setIsExpanded(!isExpanded)}\r\n                >\r\n                    <span>Filters</span>\r\n                    <span className={`toggle-icon ${isExpanded ? 'expanded' : ''}`}>▼</span>\r\n                    {hasActiveFilters() && <span className=\"active-indicator\">●</span>}\r\n                </button>\r\n\r\n                {hasActiveFilters() && (\r\n                    <button className=\"clear-filters-btn\" onClick={clearFilters}>\r\n                        Clear All\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            {isExpanded && (\r\n                <div className=\"filter-content\">\r\n                    {/* Date Range Filter */}\r\n                    <div className=\"filter-section\">\r\n                        <h4>Date Range</h4>\r\n                        <div className=\"date-inputs\">\r\n                            <div className=\"input-group\">\r\n                                <label htmlFor=\"start-date\">From:</label>\r\n                                <input\r\n                                    id=\"start-date\"\r\n                                    type=\"date\"\r\n                                    value={formatDateForInput(localFilters.dateRange?.startDate)}\r\n                                    onChange={(e) => handleDateRangeChange('startDate', e.target.value)}\r\n                                    min={new Date().toISOString().split('T')[0]}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label htmlFor=\"end-date\">To:</label>\r\n                                <input\r\n                                    id=\"end-date\"\r\n                                    type=\"date\"\r\n                                    value={formatDateForInput(localFilters.dateRange?.endDate)}\r\n                                    onChange={(e) => handleDateRangeChange('endDate', e.target.value)}\r\n                                    min={formatDateForInput(localFilters.dateRange?.startDate) || new Date().toISOString().split('T')[0]}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Location Filter */}\r\n                    <div className=\"filter-section\">\r\n                        <h4>Location</h4>\r\n                        <div className=\"location-inputs\">\r\n                            <div className=\"input-group\">\r\n                                <label htmlFor=\"city\">City:</label>\r\n                                <input\r\n                                    id=\"city\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"e.g., Seattle\"\r\n                                    value={localFilters.location?.city || ''}\r\n                                    onChange={(e) => handleLocationChange('city', e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label htmlFor=\"state\">State:</label>\r\n                                <input\r\n                                    id=\"state\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"e.g., WA\"\r\n                                    value={localFilters.location?.state || ''}\r\n                                    onChange={(e) => handleLocationChange('state', e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label htmlFor=\"radius\">Radius (miles):</label>\r\n                                <input\r\n                                    id=\"radius\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"25\"\r\n                                    min=\"1\"\r\n                                    max=\"500\"\r\n                                    value={localFilters.location?.radius || ''}\r\n                                    onChange={(e) => handleLocationChange('radius', parseInt(e.target.value))}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Categories Filter */}\r\n                    <div className=\"filter-section\">\r\n                        <h4>Categories</h4>\r\n                        <div className=\"categories-grid\">\r\n                            {categories.map((category) => (\r\n                                <label key={category} className=\"category-checkbox\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={localFilters.categories?.includes(category) || false}\r\n                                        onChange={() => handleCategoryToggle(category)}\r\n                                    />\r\n                                    <span>{category}</span>\r\n                                </label>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Price Range Filter */}\r\n                    <div className=\"filter-section\">\r\n                        <h4>Price Range</h4>\r\n                        <div className=\"price-inputs\">\r\n                            <div className=\"input-group\">\r\n                                <label htmlFor=\"min-price\">Min ($):</label>\r\n                                <input\r\n                                    id=\"min-price\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"0\"\r\n                                    min=\"0\"\r\n                                    value={localFilters.priceRange?.min || ''}\r\n                                    onChange={(e) => handlePriceRangeChange('min', e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label htmlFor=\"max-price\">Max ($):</label>\r\n                                <input\r\n                                    id=\"max-price\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"1000\"\r\n                                    min=\"0\"\r\n                                    value={localFilters.priceRange?.max || ''}\r\n                                    onChange={(e) => handlePriceRangeChange('max', e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Keywords Filter */}\r\n                    <div className=\"filter-section\">\r\n                        <h4>Keywords</h4>\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"keywords\">Keywords (comma-separated):</label>\r\n                            <input\r\n                                id=\"keywords\"\r\n                                type=\"text\"\r\n                                placeholder=\"e.g., networking, startup, tech\"\r\n                                value={localFilters.keywords?.join(', ') || ''}\r\n                                onChange={(e) => handleKeywordsChange(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Apply Filters Button */}\r\n                    <div className=\"filter-actions\">\r\n                        <button className=\"apply-filters-btn\" onClick={applyFilters}>\r\n                            Apply Filters\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}