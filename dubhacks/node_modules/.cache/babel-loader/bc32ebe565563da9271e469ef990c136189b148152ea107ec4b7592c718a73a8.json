{"ast":null,"code":"import _objectSpread from\"/Users/bhuvangundela/Desktop/Projects/dubhacks-au25/dubhacks/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import{authService}from'../services/authService';// Auth Actions\n// Auth Context Interface\nimport{jsx as _jsx}from\"react/jsx-runtime\";// Initial state\nconst initialState={isAuthenticated:false,user:null,token:null,loading:true,// Start with loading true to check stored auth\nerror:null};// Auth reducer\nfunction authReducer(state,action){switch(action.type){case'AUTH_START':return _objectSpread(_objectSpread({},state),{},{loading:true,error:null});case'AUTH_SUCCESS':return _objectSpread(_objectSpread({},state),{},{isAuthenticated:true,user:action.payload.user,token:action.payload.token,loading:false,error:null});case'AUTH_FAILURE':return _objectSpread(_objectSpread({},state),{},{isAuthenticated:false,user:null,token:null,loading:false,error:action.payload});case'LOGOUT':return _objectSpread(_objectSpread({},state),{},{isAuthenticated:false,user:null,token:null,loading:false,error:null});case'CLEAR_ERROR':return _objectSpread(_objectSpread({},state),{},{error:null});case'SET_LOADING':return _objectSpread(_objectSpread({},state),{},{loading:action.payload});default:return state;}}// Create context\nconst AuthContext=/*#__PURE__*/createContext(undefined);// Auth Provider Props\n// Auth Provider Component\nexport function AuthProvider(_ref){let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);// Check for stored authentication on mount\nuseEffect(()=>{const checkStoredAuth=()=>{try{const token=authService.getStoredToken();const user=authService.getCurrentUser();if(token&&user){dispatch({type:'AUTH_SUCCESS',payload:{user,token}});}else{dispatch({type:'SET_LOADING',payload:false});}}catch(error){console.error('Error checking stored auth:',error);dispatch({type:'SET_LOADING',payload:false});}};checkStoredAuth();},[]);// Login function\nconst login=async credentials=>{dispatch({type:'AUTH_START'});try{// Validate credentials\nconst validation=authService.validateLoginCredentials(credentials);if(!validation.isValid){const error=validation.errors.join(', ');dispatch({type:'AUTH_FAILURE',payload:error});return{success:false,error};}// Attempt login\nconst result=await authService.login(credentials);if(result.success&&result.user&&result.token){dispatch({type:'AUTH_SUCCESS',payload:{user:result.user,token:result.token.token}});}else{dispatch({type:'AUTH_FAILURE',payload:result.error||'Login failed'});}return result;}catch(error){const errorMessage='An unexpected error occurred during login';dispatch({type:'AUTH_FAILURE',payload:errorMessage});return{success:false,error:errorMessage};}};// Register function\nconst register=async userData=>{dispatch({type:'AUTH_START'});try{// Validate registration data\nconst validation=authService.validateRegistrationData(userData);if(!validation.isValid){const error=validation.errors.join(', ');dispatch({type:'AUTH_FAILURE',payload:error});return{success:false,error};}// Attempt registration\nconst result=await authService.register(userData);if(result.success&&result.user&&result.token){dispatch({type:'AUTH_SUCCESS',payload:{user:result.user,token:result.token.token}});}else{dispatch({type:'AUTH_FAILURE',payload:result.error||'Registration failed'});}return result;}catch(error){const errorMessage='An unexpected error occurred during registration';dispatch({type:'AUTH_FAILURE',payload:errorMessage});return{success:false,error:errorMessage};}};// Logout function\nconst logout=async()=>{try{await authService.logout();}catch(error){console.error('Logout error:',error);}finally{dispatch({type:'LOGOUT'});}};// Refresh token function\nconst refreshToken=async()=>{try{const result=await authService.refreshToken();if(result.success&&result.user&&result.token){dispatch({type:'AUTH_SUCCESS',payload:{user:result.user,token:result.token.token}});}else{dispatch({type:'LOGOUT'});}return result;}catch(error){dispatch({type:'LOGOUT'});return{success:false,error:'Token refresh failed'};}};// Clear error function\nconst clearError=()=>{dispatch({type:'CLEAR_ERROR'});};// Context value\nconst contextValue={state,login,register,logout,refreshToken,clearError,isAuthenticated:state.isAuthenticated};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:contextValue,children:children});}// Custom hook to use auth context\nexport function useAuth(){const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsx","_jsx","initialState","isAuthenticated","user","token","loading","error","authReducer","state","action","type","_objectSpread","payload","AuthContext","undefined","AuthProvider","_ref","children","dispatch","checkStoredAuth","getStoredToken","getCurrentUser","console","login","credentials","validation","validateLoginCredentials","isValid","errors","join","success","result","errorMessage","register","userData","validateRegistrationData","logout","refreshToken","clearError","contextValue","Provider","value","useAuth","context","Error"],"sources":["/Users/bhuvangundela/Desktop/Projects/dubhacks-au25/dubhacks/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { authService, AuthResult } from '../services/authService';\nimport { User, LoginCredentials, RegisterData, AuthState } from '../types';\n\n// Auth Actions\ntype AuthAction =\n  | { type: 'AUTH_START' }\n  | { type: 'AUTH_SUCCESS'; payload: { user: User; token: string } }\n  | { type: 'AUTH_FAILURE'; payload: string }\n  | { type: 'LOGOUT' }\n  | { type: 'CLEAR_ERROR' }\n  | { type: 'SET_LOADING'; payload: boolean };\n\n// Auth Context Interface\ninterface AuthContextType {\n  state: AuthState;\n  login: (credentials: LoginCredentials) => Promise<AuthResult>;\n  register: (userData: RegisterData) => Promise<AuthResult>;\n  logout: () => Promise<void>;\n  refreshToken: () => Promise<AuthResult>;\n  clearError: () => void;\n  isAuthenticated: boolean;\n}\n\n// Initial state\nconst initialState: AuthState = {\n  isAuthenticated: false,\n  user: null,\n  token: null,\n  loading: true, // Start with loading true to check stored auth\n  error: null,\n};\n\n// Auth reducer\nfunction authReducer(state: AuthState, action: AuthAction): AuthState {\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n        error: null,\n      };\n\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        loading: false,\n        error: action.payload,\n      };\n\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        loading: false,\n        error: null,\n      };\n\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null,\n      };\n\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\n// Create context\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Auth Provider Props\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\n// Auth Provider Component\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check for stored authentication on mount\n  useEffect(() => {\n    const checkStoredAuth = () => {\n      try {\n        const token = authService.getStoredToken();\n        const user = authService.getCurrentUser();\n\n        if (token && user) {\n          dispatch({\n            type: 'AUTH_SUCCESS',\n            payload: { user, token }\n          });\n        } else {\n          dispatch({ type: 'SET_LOADING', payload: false });\n        }\n      } catch (error) {\n        console.error('Error checking stored auth:', error);\n        dispatch({ type: 'SET_LOADING', payload: false });\n      }\n    };\n\n    checkStoredAuth();\n  }, []);\n\n  // Login function\n  const login = async (credentials: LoginCredentials): Promise<AuthResult> => {\n    dispatch({ type: 'AUTH_START' });\n\n    try {\n      // Validate credentials\n      const validation = authService.validateLoginCredentials(credentials);\n      if (!validation.isValid) {\n        const error = validation.errors.join(', ');\n        dispatch({ type: 'AUTH_FAILURE', payload: error });\n        return { success: false, error };\n      }\n\n      // Attempt login\n      const result = await authService.login(credentials);\n\n      if (result.success && result.user && result.token) {\n        dispatch({\n          type: 'AUTH_SUCCESS',\n          payload: {\n            user: result.user,\n            token: result.token.token\n          }\n        });\n      } else {\n        dispatch({\n          type: 'AUTH_FAILURE',\n          payload: result.error || 'Login failed'\n        });\n      }\n\n      return result;\n    } catch (error) {\n      const errorMessage = 'An unexpected error occurred during login';\n      dispatch({ type: 'AUTH_FAILURE', payload: errorMessage });\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Register function\n  const register = async (userData: RegisterData): Promise<AuthResult> => {\n    dispatch({ type: 'AUTH_START' });\n\n    try {\n      // Validate registration data\n      const validation = authService.validateRegistrationData(userData);\n      if (!validation.isValid) {\n        const error = validation.errors.join(', ');\n        dispatch({ type: 'AUTH_FAILURE', payload: error });\n        return { success: false, error };\n      }\n\n      // Attempt registration\n      const result = await authService.register(userData);\n\n      if (result.success && result.user && result.token) {\n        dispatch({\n          type: 'AUTH_SUCCESS',\n          payload: {\n            user: result.user,\n            token: result.token.token\n          }\n        });\n      } else {\n        dispatch({\n          type: 'AUTH_FAILURE',\n          payload: result.error || 'Registration failed'\n        });\n      }\n\n      return result;\n    } catch (error) {\n      const errorMessage = 'An unexpected error occurred during registration';\n      dispatch({ type: 'AUTH_FAILURE', payload: errorMessage });\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Logout function\n  const logout = async (): Promise<void> => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({ type: 'LOGOUT' });\n    }\n  };\n\n  // Refresh token function\n  const refreshToken = async (): Promise<AuthResult> => {\n    try {\n      const result = await authService.refreshToken();\n\n      if (result.success && result.user && result.token) {\n        dispatch({\n          type: 'AUTH_SUCCESS',\n          payload: {\n            user: result.user,\n            token: result.token.token\n          }\n        });\n      } else {\n        dispatch({ type: 'LOGOUT' });\n      }\n\n      return result;\n    } catch (error) {\n      dispatch({ type: 'LOGOUT' });\n      return { success: false, error: 'Token refresh failed' };\n    }\n  };\n\n  // Clear error function\n  const clearError = (): void => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  };\n\n  // Context value\n  const contextValue: AuthContextType = {\n    state,\n    login,\n    register,\n    logout,\n    refreshToken,\n    clearError,\n    isAuthenticated: state.isAuthenticated,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\n// Custom hook to use auth context\nexport function useAuth(): AuthContextType {\n  const context = useContext(AuthContext);\n  \n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  \n  return context;\n}"],"mappings":"iJAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,UAAU,CAAEC,SAAS,KAAmB,OAAO,CAC1F,OAASC,WAAW,KAAoB,yBAAyB,CAGjE;AASA;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAWA;AACA,KAAM,CAAAC,YAAuB,CAAG,CAC9BC,eAAe,CAAE,KAAK,CACtBC,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,IAAI,CACXC,OAAO,CAAE,IAAI,CAAE;AACfC,KAAK,CAAE,IACT,CAAC,CAED;AACA,QAAS,CAAAC,WAAWA,CAACC,KAAgB,CAAEC,MAAkB,CAAa,CACpE,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAK,YAAY,CACf,OAAAC,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRH,OAAO,CAAE,IAAI,CACbC,KAAK,CAAE,IAAI,GAGf,IAAK,cAAc,CACjB,OAAAK,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRN,eAAe,CAAE,IAAI,CACrBC,IAAI,CAAEM,MAAM,CAACG,OAAO,CAACT,IAAI,CACzBC,KAAK,CAAEK,MAAM,CAACG,OAAO,CAACR,KAAK,CAC3BC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,IAAI,GAGf,IAAK,cAAc,CACjB,OAAAK,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRN,eAAe,CAAE,KAAK,CACtBC,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,IAAI,CACXC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAEG,MAAM,CAACG,OAAO,GAGzB,IAAK,QAAQ,CACX,OAAAD,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRN,eAAe,CAAE,KAAK,CACtBC,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,IAAI,CACXC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,IAAI,GAGf,IAAK,aAAa,CAChB,OAAAK,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRF,KAAK,CAAE,IAAI,GAGf,IAAK,aAAa,CAChB,OAAAK,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRH,OAAO,CAAEI,MAAM,CAACG,OAAO,GAG3B,QACE,MAAO,CAAAJ,KAAK,CAChB,CACF,CAEA;AACA,KAAM,CAAAK,WAAW,cAAGnB,aAAa,CAA8BoB,SAAS,CAAC,CAEzE;AAKA;AACA,MAAO,SAAS,CAAAC,YAAYA,CAAAC,IAAA,CAAkC,IAAjC,CAAEC,QAA4B,CAAC,CAAAD,IAAA,CAC1D,KAAM,CAACR,KAAK,CAAEU,QAAQ,CAAC,CAAGtB,UAAU,CAACW,WAAW,CAAEN,YAAY,CAAC,CAE/D;AACAJ,SAAS,CAAC,IAAM,CACd,KAAM,CAAAsB,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAI,CACF,KAAM,CAAAf,KAAK,CAAGN,WAAW,CAACsB,cAAc,CAAC,CAAC,CAC1C,KAAM,CAAAjB,IAAI,CAAGL,WAAW,CAACuB,cAAc,CAAC,CAAC,CAEzC,GAAIjB,KAAK,EAAID,IAAI,CAAE,CACjBe,QAAQ,CAAC,CACPR,IAAI,CAAE,cAAc,CACpBE,OAAO,CAAE,CAAET,IAAI,CAAEC,KAAM,CACzB,CAAC,CAAC,CACJ,CAAC,IAAM,CACLc,QAAQ,CAAC,CAAER,IAAI,CAAE,aAAa,CAAEE,OAAO,CAAE,KAAM,CAAC,CAAC,CACnD,CACF,CAAE,MAAON,KAAK,CAAE,CACdgB,OAAO,CAAChB,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnDY,QAAQ,CAAC,CAAER,IAAI,CAAE,aAAa,CAAEE,OAAO,CAAE,KAAM,CAAC,CAAC,CACnD,CACF,CAAC,CAEDO,eAAe,CAAC,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAI,KAAK,CAAG,KAAO,CAAAC,WAA6B,EAA0B,CAC1EN,QAAQ,CAAC,CAAER,IAAI,CAAE,YAAa,CAAC,CAAC,CAEhC,GAAI,CACF;AACA,KAAM,CAAAe,UAAU,CAAG3B,WAAW,CAAC4B,wBAAwB,CAACF,WAAW,CAAC,CACpE,GAAI,CAACC,UAAU,CAACE,OAAO,CAAE,CACvB,KAAM,CAAArB,KAAK,CAAGmB,UAAU,CAACG,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAC1CX,QAAQ,CAAC,CAAER,IAAI,CAAE,cAAc,CAAEE,OAAO,CAAEN,KAAM,CAAC,CAAC,CAClD,MAAO,CAAEwB,OAAO,CAAE,KAAK,CAAExB,KAAM,CAAC,CAClC,CAEA;AACA,KAAM,CAAAyB,MAAM,CAAG,KAAM,CAAAjC,WAAW,CAACyB,KAAK,CAACC,WAAW,CAAC,CAEnD,GAAIO,MAAM,CAACD,OAAO,EAAIC,MAAM,CAAC5B,IAAI,EAAI4B,MAAM,CAAC3B,KAAK,CAAE,CACjDc,QAAQ,CAAC,CACPR,IAAI,CAAE,cAAc,CACpBE,OAAO,CAAE,CACPT,IAAI,CAAE4B,MAAM,CAAC5B,IAAI,CACjBC,KAAK,CAAE2B,MAAM,CAAC3B,KAAK,CAACA,KACtB,CACF,CAAC,CAAC,CACJ,CAAC,IAAM,CACLc,QAAQ,CAAC,CACPR,IAAI,CAAE,cAAc,CACpBE,OAAO,CAAEmB,MAAM,CAACzB,KAAK,EAAI,cAC3B,CAAC,CAAC,CACJ,CAEA,MAAO,CAAAyB,MAAM,CACf,CAAE,MAAOzB,KAAK,CAAE,CACd,KAAM,CAAA0B,YAAY,CAAG,2CAA2C,CAChEd,QAAQ,CAAC,CAAER,IAAI,CAAE,cAAc,CAAEE,OAAO,CAAEoB,YAAa,CAAC,CAAC,CACzD,MAAO,CAAEF,OAAO,CAAE,KAAK,CAAExB,KAAK,CAAE0B,YAAa,CAAC,CAChD,CACF,CAAC,CAED;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAO,CAAAC,QAAsB,EAA0B,CACtEhB,QAAQ,CAAC,CAAER,IAAI,CAAE,YAAa,CAAC,CAAC,CAEhC,GAAI,CACF;AACA,KAAM,CAAAe,UAAU,CAAG3B,WAAW,CAACqC,wBAAwB,CAACD,QAAQ,CAAC,CACjE,GAAI,CAACT,UAAU,CAACE,OAAO,CAAE,CACvB,KAAM,CAAArB,KAAK,CAAGmB,UAAU,CAACG,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAC1CX,QAAQ,CAAC,CAAER,IAAI,CAAE,cAAc,CAAEE,OAAO,CAAEN,KAAM,CAAC,CAAC,CAClD,MAAO,CAAEwB,OAAO,CAAE,KAAK,CAAExB,KAAM,CAAC,CAClC,CAEA;AACA,KAAM,CAAAyB,MAAM,CAAG,KAAM,CAAAjC,WAAW,CAACmC,QAAQ,CAACC,QAAQ,CAAC,CAEnD,GAAIH,MAAM,CAACD,OAAO,EAAIC,MAAM,CAAC5B,IAAI,EAAI4B,MAAM,CAAC3B,KAAK,CAAE,CACjDc,QAAQ,CAAC,CACPR,IAAI,CAAE,cAAc,CACpBE,OAAO,CAAE,CACPT,IAAI,CAAE4B,MAAM,CAAC5B,IAAI,CACjBC,KAAK,CAAE2B,MAAM,CAAC3B,KAAK,CAACA,KACtB,CACF,CAAC,CAAC,CACJ,CAAC,IAAM,CACLc,QAAQ,CAAC,CACPR,IAAI,CAAE,cAAc,CACpBE,OAAO,CAAEmB,MAAM,CAACzB,KAAK,EAAI,qBAC3B,CAAC,CAAC,CACJ,CAEA,MAAO,CAAAyB,MAAM,CACf,CAAE,MAAOzB,KAAK,CAAE,CACd,KAAM,CAAA0B,YAAY,CAAG,kDAAkD,CACvEd,QAAQ,CAAC,CAAER,IAAI,CAAE,cAAc,CAAEE,OAAO,CAAEoB,YAAa,CAAC,CAAC,CACzD,MAAO,CAAEF,OAAO,CAAE,KAAK,CAAExB,KAAK,CAAE0B,YAAa,CAAC,CAChD,CACF,CAAC,CAED;AACA,KAAM,CAAAI,MAAM,CAAG,KAAAA,CAAA,GAA2B,CACxC,GAAI,CACF,KAAM,CAAAtC,WAAW,CAACsC,MAAM,CAAC,CAAC,CAC5B,CAAE,MAAO9B,KAAK,CAAE,CACdgB,OAAO,CAAChB,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACvC,CAAC,OAAS,CACRY,QAAQ,CAAC,CAAER,IAAI,CAAE,QAAS,CAAC,CAAC,CAC9B,CACF,CAAC,CAED;AACA,KAAM,CAAA2B,YAAY,CAAG,KAAAA,CAAA,GAAiC,CACpD,GAAI,CACF,KAAM,CAAAN,MAAM,CAAG,KAAM,CAAAjC,WAAW,CAACuC,YAAY,CAAC,CAAC,CAE/C,GAAIN,MAAM,CAACD,OAAO,EAAIC,MAAM,CAAC5B,IAAI,EAAI4B,MAAM,CAAC3B,KAAK,CAAE,CACjDc,QAAQ,CAAC,CACPR,IAAI,CAAE,cAAc,CACpBE,OAAO,CAAE,CACPT,IAAI,CAAE4B,MAAM,CAAC5B,IAAI,CACjBC,KAAK,CAAE2B,MAAM,CAAC3B,KAAK,CAACA,KACtB,CACF,CAAC,CAAC,CACJ,CAAC,IAAM,CACLc,QAAQ,CAAC,CAAER,IAAI,CAAE,QAAS,CAAC,CAAC,CAC9B,CAEA,MAAO,CAAAqB,MAAM,CACf,CAAE,MAAOzB,KAAK,CAAE,CACdY,QAAQ,CAAC,CAAER,IAAI,CAAE,QAAS,CAAC,CAAC,CAC5B,MAAO,CAAEoB,OAAO,CAAE,KAAK,CAAExB,KAAK,CAAE,sBAAuB,CAAC,CAC1D,CACF,CAAC,CAED;AACA,KAAM,CAAAgC,UAAU,CAAGA,CAAA,GAAY,CAC7BpB,QAAQ,CAAC,CAAER,IAAI,CAAE,aAAc,CAAC,CAAC,CACnC,CAAC,CAED;AACA,KAAM,CAAA6B,YAA6B,CAAG,CACpC/B,KAAK,CACLe,KAAK,CACLU,QAAQ,CACRG,MAAM,CACNC,YAAY,CACZC,UAAU,CACVpC,eAAe,CAAEM,KAAK,CAACN,eACzB,CAAC,CAED,mBACEF,IAAA,CAACa,WAAW,CAAC2B,QAAQ,EAACC,KAAK,CAAEF,YAAa,CAAAtB,QAAA,CACvCA,QAAQ,CACW,CAAC,CAE3B,CAEA;AACA,MAAO,SAAS,CAAAyB,OAAOA,CAAA,CAAoB,CACzC,KAAM,CAAAC,OAAO,CAAGhD,UAAU,CAACkB,WAAW,CAAC,CAEvC,GAAI8B,OAAO,GAAK7B,SAAS,CAAE,CACzB,KAAM,IAAI,CAAA8B,KAAK,CAAC,6CAA6C,CAAC,CAChE,CAEA,MAAO,CAAAD,OAAO,CAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}