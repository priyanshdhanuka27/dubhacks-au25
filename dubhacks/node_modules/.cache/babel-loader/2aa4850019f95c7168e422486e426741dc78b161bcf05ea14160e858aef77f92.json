{"ast":null,"code":"import React,{useState}from'react';import{CalendarModal}from'./CalendarModal';import'./SearchComponents.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const EventCard=_ref=>{let{event,onSave,onCalendarAdd,viewMode='grid'}=_ref;const[isSaving,setIsSaving]=useState(false);const[isAddingToCalendar,setIsAddingToCalendar]=useState(false);const[showCalendarModal,setShowCalendarModal]=useState(false);const formatDate=dateString=>{const date=new Date(dateString);return{date:date.toLocaleDateString('en-US',{weekday:'short',month:'short',day:'numeric'}),time:date.toLocaleTimeString('en-US',{hour:'numeric',minute:'2-digit',hour12:true})};};const handleSave=async()=>{if(!onSave||isSaving)return;setIsSaving(true);try{await onSave(event.eventId);}catch(error){console.error('Error saving event:',error);}finally{setIsSaving(false);}};const handleCalendarAdd=async()=>{if(onCalendarAdd){// Use legacy callback if provided\nif(isAddingToCalendar)return;setIsAddingToCalendar(true);try{await onCalendarAdd(event);}catch(error){console.error('Error adding to calendar:',error);}finally{setIsAddingToCalendar(false);}}else{// Use new modal approach\nsetShowCalendarModal(true);}};const startDate=formatDate(event.startDateTime);const endDate=formatDate(event.endDateTime);const isMultiDay=new Date(event.startDateTime).toDateString()!==new Date(event.endDateTime).toDateString();const getSourceIcon=source=>{if(source==='user-submitted')return'👤';if(source.includes('eventbrite'))return'🎫';if(source.includes('meetup'))return'👥';if(source.includes('facebook'))return'📘';return'🌐';};const getRelevanceColor=score=>{if(score>=0.8)return'#4CAF50';if(score>=0.6)return'#FF9800';return'#757575';};return/*#__PURE__*/_jsxs(\"div\",{className:\"event-card \".concat(viewMode),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"event-card-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"event-date\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"date-primary\",children:startDate.date}),/*#__PURE__*/_jsx(\"div\",{className:\"time-primary\",children:startDate.time}),isMultiDay&&/*#__PURE__*/_jsxs(\"div\",{className:\"date-end\",children:[\"to \",endDate.date]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"event-meta\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"source-indicator\",title:\"Source: \".concat(event.source),children:getSourceIcon(event.source)}),/*#__PURE__*/_jsxs(\"div\",{className:\"relevance-score\",style:{color:getRelevanceColor(event.relevanceScore)},title:\"Relevance: \".concat(Math.round(event.relevanceScore*100),\"%\"),children:[Math.round(event.relevanceScore*100),\"%\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"event-card-content\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"event-title\",children:event.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"event-location\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"location-icon\",children:\"\\uD83D\\uDCCD\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"location-text\",children:[event.location.venue,event.location.city&&\", \".concat(event.location.city),event.location.state&&\", \".concat(event.location.state)]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"event-description\",children:event.description.length>150?\"\".concat(event.description.substring(0,150),\"...\"):event.description}),event.isUserSubmitted&&/*#__PURE__*/_jsx(\"div\",{className:\"user-submitted-badge\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDC64 User Submitted\"})}),event.isSaved&&/*#__PURE__*/_jsx(\"div\",{className:\"saved-badge\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCBE Saved\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"event-card-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"view-details-btn\",onClick:()=>{// Navigate to event details page\nwindow.open(\"/events/\".concat(event.eventId),'_blank');},children:\"View Details\"}),onSave&&/*#__PURE__*/_jsx(\"button\",{className:\"save-btn \".concat(event.isSaved?'saved':''),onClick:handleSave,disabled:isSaving,title:event.isSaved?'Remove from saved':'Save event',children:isSaving?'⏳':event.isSaved?'💾':'🔖'}),/*#__PURE__*/_jsx(\"button\",{className:\"calendar-btn\",onClick:handleCalendarAdd,disabled:isAddingToCalendar,title:\"Add to calendar\",children:isAddingToCalendar?'⏳':'📅'})]}),/*#__PURE__*/_jsx(CalendarModal,{event:event,isOpen:showCalendarModal,onClose:()=>setShowCalendarModal(false)})]});};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}