{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\OneDrive - UW\\\\Hackathons\\\\auDubhacks25\\\\dubhacks\\\\src\\\\components\\\\auth\\\\LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { config } from '../../config';\nimport './AuthForms.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LoginForm({\n  onSuccess,\n  onSwitchToRegister\n}) {\n  _s();\n  const {\n    login,\n    state,\n    clearError\n  } = useAuth();\n  const {\n    googleLogin\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [formErrors, setFormErrors] = useState([]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear errors when user starts typing\n    if (formErrors.length > 0) {\n      setFormErrors([]);\n    }\n    if (state.error) {\n      clearError();\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setFormErrors([]);\n\n    // Client-side validation\n    const errors = [];\n    if (!formData.email.trim()) {\n      errors.push('Email is required');\n    }\n    if (!formData.password) {\n      errors.push('Password is required');\n    }\n    if (errors.length > 0) {\n      setFormErrors(errors);\n      return;\n    }\n    try {\n      const result = await login(formData);\n      if (result.success && onSuccess) {\n        onSuccess();\n      }\n    } catch (error) {\n      console.error('Login form error:', error);\n    }\n  };\n  const displayErrors = formErrors.length > 0 ? formErrors : state.error ? [state.error] : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"auth-form-title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), displayErrors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-form-errors\",\n        children: displayErrors.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-form-error\",\n          children: error\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"auth-form-label\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleInputChange,\n          className: \"auth-form-input\",\n          placeholder: \"Enter your email\",\n          required: true,\n          autoComplete: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"auth-form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleInputChange,\n          className: \"auth-form-input\",\n          placeholder: \"Enter your password\",\n          required: true,\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"auth-form-submit\",\n        disabled: state.loading,\n        children: state.loading ? 'Signing In...' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), onSwitchToRegister && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-form-switch\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onSwitchToRegister,\n            className: \"auth-form-switch-button\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), config.auth.googleClientId && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"g_id_signin\",\n        style: {\n          marginTop: '12px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n// Initialize Google Identity button after component mounts\n// Put outside component to prevent re-creating functions on every render\n_s(LoginForm, \"Mlr4C0HQLyMQKHPS3JcltU5hQGg=\", false, function () {\n  return [useAuth, useAuth];\n});\n_c = LoginForm;\n(function initGoogleIdentity() {\n  // If window.google isn't available we can't init â€” client script must be loaded in index.html\n  try {\n    if (typeof window === 'undefined') return;\n    // Wait until DOM is ready\n    const start = () => {\n      const googleClientId = config.auth.googleClientId;\n      if (!googleClientId) return;\n      // If sdk not loaded yet, try again later\n      // @ts-ignore\n      if (!window.google || !window.google.accounts || !window.google.accounts.id) return;\n\n      // Render will be invoked by component mount; actual callback is registered in component via event listener\n    };\n    if (document.readyState === 'complete' || document.readyState === 'interactive') {\n      start();\n    } else {\n      document.addEventListener('DOMContentLoaded', start);\n    }\n  } catch (e) {\n    // ignore\n  }\n})();\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useAuth","config","jsxDEV","_jsxDEV","LoginForm","onSuccess","onSwitchToRegister","_s","login","state","clearError","googleLogin","formData","setFormData","email","password","formErrors","setFormErrors","handleInputChange","e","name","value","target","prev","length","error","handleSubmit","preventDefault","errors","trim","push","result","success","console","displayErrors","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","map","index","htmlFor","type","id","onChange","placeholder","required","autoComplete","disabled","loading","onClick","auth","googleClientId","style","marginTop","_c","initGoogleIdentity","window","start","google","accounts","document","readyState","addEventListener","$RefreshReg$"],"sources":["C:/Users/priya/OneDrive - UW/Hackathons/auDubhacks25/dubhacks/src/components/auth/LoginForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { config } from '../../config';\r\nimport { LoginCredentials } from '../../types';\r\nimport './AuthForms.css';\r\n\r\ninterface LoginFormProps {\r\n  onSuccess?: () => void;\r\n  onSwitchToRegister?: () => void;\r\n}\r\n\r\n\r\nexport function LoginForm({ onSuccess, onSwitchToRegister }: LoginFormProps) {\r\n  const { login, state, clearError } = useAuth();\r\n  const { googleLogin } = useAuth();\r\n  const [formData, setFormData] = useState<LoginCredentials>({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [formErrors, setFormErrors] = useState<string[]>([]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    \r\n    // Clear errors when user starts typing\r\n    if (formErrors.length > 0) {\r\n      setFormErrors([]);\r\n    }\r\n    if (state.error) {\r\n      clearError();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setFormErrors([]);\r\n\r\n    // Client-side validation\r\n    const errors: string[] = [];\r\n    if (!formData.email.trim()) {\r\n      errors.push('Email is required');\r\n    }\r\n    if (!formData.password) {\r\n      errors.push('Password is required');\r\n    }\r\n\r\n    if (errors.length > 0) {\r\n      setFormErrors(errors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await login(formData);\r\n      if (result.success && onSuccess) {\r\n        onSuccess();\r\n      }\r\n    } catch (error) {\r\n      console.error('Login form error:', error);\r\n    }\r\n  };\r\n\r\n  const displayErrors = formErrors.length > 0 ? formErrors : (state.error ? [state.error] : []);\r\n\r\n  return (\r\n    <div className=\"auth-form-container\">\r\n      <form onSubmit={handleSubmit} className=\"auth-form\">\r\n        <h2 className=\"auth-form-title\">Sign In</h2>\r\n        \r\n        {displayErrors.length > 0 && (\r\n          <div className=\"auth-form-errors\">\r\n            {displayErrors.map((error, index) => (\r\n              <div key={index} className=\"auth-form-error\">\r\n                {error}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"auth-form-group\">\r\n          <label htmlFor=\"email\" className=\"auth-form-label\">\r\n            Email Address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n            className=\"auth-form-input\"\r\n            placeholder=\"Enter your email\"\r\n            required\r\n            autoComplete=\"email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"auth-form-group\">\r\n          <label htmlFor=\"password\" className=\"auth-form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleInputChange}\r\n            className=\"auth-form-input\"\r\n            placeholder=\"Enter your password\"\r\n            required\r\n            autoComplete=\"current-password\"\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"auth-form-submit\"\r\n          disabled={state.loading}\r\n        >\r\n          {state.loading ? 'Signing In...' : 'Sign In'}\r\n        </button>\r\n\r\n        {onSwitchToRegister && (\r\n          <div className=\"auth-form-switch\">\r\n            <p>\r\n              Don't have an account?{' '}\r\n              <button\r\n                type=\"button\"\r\n                onClick={onSwitchToRegister}\r\n                className=\"auth-form-switch-button\"\r\n              >\r\n                Sign Up\r\n              </button>\r\n            </p>\r\n          </div>\r\n        )}\r\n        {/* Google Sign-In button placeholder */}\r\n        {config.auth.googleClientId && (\r\n          <div id=\"g_id_signin\" style={{ marginTop: '12px' }} />\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Initialize Google Identity button after component mounts\r\n// Put outside component to prevent re-creating functions on every render\r\n(function initGoogleIdentity() {\r\n  // If window.google isn't available we can't init â€” client script must be loaded in index.html\r\n  try {\r\n    if (typeof window === 'undefined') return;\r\n    // Wait until DOM is ready\r\n    const start = () => {\r\n      const googleClientId = config.auth.googleClientId;\r\n      if (!googleClientId) return;\r\n      // If sdk not loaded yet, try again later\r\n      // @ts-ignore\r\n      if (!window.google || !window.google.accounts || !window.google.accounts.id) return;\r\n\r\n      // Render will be invoked by component mount; actual callback is registered in component via event listener\r\n    };\r\n    if (document.readyState === 'complete' || document.readyState === 'interactive') {\r\n      start();\r\n    } else {\r\n      document.addEventListener('DOMContentLoaded', start);\r\n    }\r\n  } catch (e) {\r\n    // ignore\r\n  }\r\n})();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}